@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@using static HouseRentingSystem.Infrastructure.DataConstants.Claim;
@using HouseRentingSystem.Infrastructure.Models;
@inject SignInManager<ApplicationUser> SignInManager
@inject IAgentService Agents
@inject IApplicationUserService Users

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @if (!await Agents.ExistsByIdAsync(User.Id()!))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Agent" asp-action="Become">Become Agent</a>
        </li>
    }
    <li class="nav-item">
        @{
            string? userName = User.FindFirstValue(FullNameClaim) ?? await Users.GetFullNameAsync(User.Id()!) ?? User.Identity!.Name;
        }
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @userName!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
    @if (User.IsAdmin())
    {
        <li class="nav-item">
            <a class="nav-link text-danger" asp-area="Admin" asp-controller="Home" asp-action="Index">To Admin Interface</a>
        </li>
    }
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
